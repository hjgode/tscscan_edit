using System;
using System.Linq;
using System.Collections.Generic;
using System.Text;

namespace tscscan_edit
{
    public class scancode
    {
        public int _scancode { get; set; }
        public string _keyUS { get; set; }

        public scancode()
        {
        }
        public scancode(int bScancode, string sKey)
        {
            _scancode = bScancode;
            _keyUS = sKey;
        }
        public override string ToString()
        {
            return _keyUS;
        }
        public static scancode[] scancodes=new scancode[]{
            new scancode( 0x00	,"error code"),
            new scancode( 0x01 	,"Esc"),
            new scancode( 0x02 	,"1!"),
            new scancode( 0x03 	,"2@"),
            new scancode( 0x04 	,"3#"),
            new scancode( 0x05 	,"4$"),
            new scancode( 0x06 	,"5%E"),
            new scancode( 0x07 	,"6^"),
            new scancode( 0x08 	,"7&"),
            new scancode( 0x09 	,"8*"),
            new scancode( 0x0a 	,"9\""),
            new scancode( 0x0b 	,"0\""),
            new scancode( 0x0c 	,"-_"),
            new scancode( 0x0d 	,"=+"),
            new scancode( 0x0e 	,"Backspace"),
            new scancode( 0x0f 	,"Tab"),
            new scancode( 0x10 	,"Q"),
            new scancode( 0x11 	,"W"),
            new scancode( 0x12 	,"E"),
            new scancode( 0x13 	,"R"),
            new scancode( 0x14 	,"T"),
            new scancode( 0x15 	,"Y"),
            new scancode( 0x16 	,"U"),
            new scancode( 0x17 	,"I"),
            new scancode( 0x18 	,"O"),
            new scancode( 0x19 	,"P"),
            new scancode( 0x1a 	,"[{"),
            new scancode( 0x1b 	,"]}"),
            new scancode( 0x1c 	,"Enter"),
            new scancode( 0x1d 	,"LCtrl"),
            new scancode( 0x1e 	,"A"),
            new scancode( 0x1f 	,"S"),
            new scancode( 0x20 	,"D"),
            new scancode( 0x21 	,"F"),
            new scancode( 0x22 	,"G"),
            new scancode( 0x23 	,"H"),
            new scancode( 0x24 	,"J"),
            new scancode( 0x25 	,"K"),
            new scancode( 0x26 	,"L"),
            new scancode( 0x27 	,";:"),
            new scancode( 0x28 	,"'\""),
            new scancode( 0x29 	,"`~"),
            new scancode( 0x2a 	,"LShift"),
            new scancode( 0x2b 	,"\\|"), //  on a 102-key keyboard),
            new scancode( 0x2c 	,"Z"),
            new scancode( 0x2d 	,"X"),
            new scancode( 0x2e 	,"C"),
            new scancode( 0x2f 	,"V"),
            new scancode( 0x30 	,"B"),
            new scancode( 0x31 	,"N"),
            new scancode( 0x32 	,"M"),
            new scancode( 0x33 	,",<"),
            new scancode( 0x34 	,".>"),
            new scancode( 0x35 	,"/?"),
            new scancode( 0x36 	,"RShift"),
            new scancode( 0x37 	,"Keypad-*"), //or ,"*/PrtScn" on a 83/84-key keyboard),
            new scancode( 0x38 	,"LAlt"),
            new scancode( 0x39 	,"Space bar"),
            new scancode( 0x3a 	,"CapsLock"),
            new scancode( 0x3b 	,"F1"),
            new scancode( 0x3c 	,"F2"),
            new scancode( 0x3d 	,"F3"),
            new scancode( 0x3e 	,"F4"),
            new scancode( 0x3f 	,"F5"),
            new scancode( 0x40 	,"F6"),
            new scancode( 0x41 	,"F7"),
            new scancode( 0x42 	,"F8"),
            new scancode( 0x43 	,"F9"),
            new scancode( 0x44 	,"F10"),
            new scancode( 0x45 	,"NumLock"),
            new scancode( 0x46 	,"ScrollLock"),
            new scancode( 0x47 	,"Keypad-7/Home"),
            new scancode( 0x48 	,"Keypad-8/Up"),
            new scancode( 0x49 	,"Keypad-9/PgUp"),
            new scancode( 0x4a 	,"Keypad--"),
            new scancode( 0x4b 	,"Keypad-4/Left"),
            new scancode( 0x4c 	,"Keypad-5"),
            new scancode( 0x4d 	,"Keypad-6/Right"),
            new scancode( 0x4e 	,"Keypad-+"),
            new scancode( 0x4f 	,"Keypad-1/End"),
            new scancode( 0x50 	,"Keypad-2/Down"),
            new scancode( 0x51 	,"Keypad-3/PgDn"),
            new scancode( 0x52 	,"Keypad-0/Ins"),
            new scancode( 0x53 	,"Keypad-./Del"),
            new scancode( 0x54 	,"Alt-SysRq")// on a 84+ key keyboard),
        };

        /// <summary>
        /// a list of known VKEY values as enumeration
        /// </summary>
        public enum VKEY : byte
        {
            VK_NOTDEF = 0x00,
            VK_LBUTTON,
            VK_RBUTTON,
            VK_CANCEL,
            VK_MBUTTON,
            undef_0x05,
            undef_0x06,
            undef_0x07,
            VK_BACK,
            VK_TAB,
            undef_0x0A,
            undef_0x0B,
            VK_CLEAR,
            VK_RETURN,
            undef_0x0E,
            undef_0x0F,
            VK_SHIFT,
            VK_CONTROL,
            VK_MENU,
            VK_PAUSE,
            VK_CAPITAL,
            VK_HANGUL,
            undef_0x16,
            VK_JUNJA,
            VK_FINAL,
            VK_KANJI,
            undef_0x1A,
            VK_ESCAPE,
            VK_CONVERT,
            VK_NOCONVERT,
            undef_0x1E,
            undef_0x1F,
            VK_SPACE,
            VK_PRIOR,
            VK_NEXT,
            VK_END,
            VK_HOME,
            VK_LEFT,
            VK_UP,
            VK_RIGHT,
            VK_DOWN,
            VK_SELECT,
            VK_PRINT,
            VK_EXECUTE,
            VK_SNAPSHOT,
            VK_INSERT,
            VK_DELETE,
            VK_HELP,
            VK_0,
            VK_1,
            VK_2,
            VK_3,
            VK_4,
            VK_5,
            VK_6,
            VK_7,
            VK_8,
            VK_9,
            undef_0x3A,
            undef_0x3B,
            undef_0x3C,
            undef_0x3D,
            undef_0x3E,
            undef_0x3F,
            undef_0x40,
            VK_A,
            VK_B,
            VK_C,
            VK_D,
            VK_E,
            VK_F,
            VK_G,
            VK_H,
            VK_I,
            VK_J,
            VK_K,
            VK_L,
            VK_M,
            VK_N,
            VK_O,
            VK_P,
            VK_Q,
            VK_R,
            VK_S,
            VK_T,
            VK_U,
            VK_V,
            VK_W,
            VK_X,
            VK_Y,
            VK_Z,
            VK_LWIN,
            VK_RWIN,
            VK_APPS,
            undef_0x5E,
            VK_SLEEP,
            VK_NUMPAD0,
            VK_NUMPAD1,
            VK_NUMPAD2,
            VK_NUMPAD3,
            VK_NUMPAD4,
            VK_NUMPAD5,
            VK_NUMPAD6,
            VK_NUMPAD7,
            VK_NUMPAD8,
            VK_NUMPAD9,
            VK_MULTIPLY,
            VK_ADD,
            VK_SEPARATOR,
            VK_SUBTRACT,
            VK_DECIMAL,
            VK_DIVIDE,
            VK_F1,
            VK_F2,
            VK_F3,
            VK_F4,
            VK_F5,
            VK_F6,
            VK_F7,
            VK_F8,
            VK_F9,
            VK_F10,
            VK_F11,
            VK_F12,
            VK_F13,
            VK_F14,
            VK_F15,
            VK_F16,
            VK_F17,
            VK_F18,
            VK_F19,
            VK_F20,
            VK_F21,
            VK_F22,
            VK_F23,
            VK_F24,
            undef_0x88,
            undef_0x89,
            undef_0x8A,
            undef_0x8B,
            undef_0x8C,
            undef_0x8D,
            undef_0x8E,
            undef_0x8F,
            VK_NUMLOCK,
            VK_SCROLL,
            undef_0x92,
            undef_0x93,
            undef_0x94,
            undef_0x95,
            undef_0x96,
            undef_0x97,
            undef_0x98,
            undef_0x99,
            undef_0x9A,
            undef_0x9B,
            undef_0x9C_light, //0x9c controls screen backlight on CN50
            undef_0x9D,
            undef_0x9E,
            undef_0x9F,
            VK_LSHIFT,
            VK_RSHIFT,
            VK_LCONTROL,
            VK_RCONTROL,
            VK_LMENU,
            VK_RMENU,
            VK_BROWSER_BACK,
            VK_BROWSER_FORWARD,
            VK_BROWSER_REFRESH,
            VK_BROWSER_STOP,
            VK_BROWSER_SEARCH,
            VK_BROWSER_FAVORITES,
            VK_BROWSER_HOME,
            VK_VOLUME_MUTE,
            VK_VOLUME_DOWN,
            VK_VOLUME_UP,
            VK_MEDIA_NEXT_TRACK,
            VK_MEDIA_PREV_TRACK,
            VK_MEDIA_STOP,
            VK_MEDIA_PLAY_PAUSE,
            VK_LAUNCH_MAIL,
            VK_LAUNCH_MEDIA_SELECT,
            VK_LAUNCH_APP1,
            VK_LAUNCH_APP2,
            undef_0xB8,
            undef_0xB9,
            VK_SEMICOLON,
            VK_EQUAL,
            VK_COMMA,
            VK_HYPHEN,
            VK_PERIOD,
            VK_SLASH,
            VK_BACKQUOTE,
            VK_APP1,
            VK_APP2,
            VK_APP3,
            VK_APP4,
            VK_APP5,
            VK_APP6,
            undef_0xC7,
            undef_0xC8,
            undef_0xC9,
            undef_0xCA,
            undef_0xCB,
            undef_0xCC,
            undef_0xCD,
            undef_0xCE,
            undef_0xCF,
            undef_0xD0,
            undef_0xD1,
            undef_0xD2,
            undef_0xD3,
            undef_0xD4,
            undef_0xD5,
            undef_0xD6,
            undef_0xD7,
            undef_0xD8,
            undef_0xD9,
            undef_0xDA,
            VK_LBRACKET,
            VK_BACKSLASH,
            VK_RBRACKET,
            VK_APOSTROPHE,
            VK_OFF,
            undef_0xE0,
            undef_0xE1_SCAN,
            VK_EXTEND_BSLASH,
            undef_0xE3,
            undef_0xE4,
            VK_PROCESSKEY,
            undef_0xE6,
            undef_0xE7,
            undef_0xE8,
            undef_0xE9,
            undef_0xEA,
            undef_0xEB,
            undef_0xEC,
            undef_0xED,
            undef_0xEE,
            undef_0xEF,
            undef_0xF0,
            undef_0xF1,
            undef_0xF2,
            undef_0xF3,
            undef_0xF4,
            undef_0xF5,
            VK_ATTN,
            VK_CRSEL,
            VK_EXSEL,
            VK_EREOF,
            VK_PLAY,
            VK_ZOOM,
            VK_NONAME,
            VK_PA1,
            VK_OEM_CLEAR,
            VK_undef_0xff
        }

    }

    public class charvalue
    {
        public byte bValue { get; set; }
        public string sValue { get; set; }
        public charvalue(byte b, string s)
        {
            bValue = b;
            sValue = s;
        }
        public override string ToString()
        {
            return sValue;
        }
    }
    public class charvalues
    {
        public charvalue[] charlist;
        public charvalues()
        {
            charlist = new charvalue[128];
            for (byte i=0;i<32;i++)
                charlist[i] = new charvalue(i, "0x"+i.ToString("x2"));
            for (byte i = 32; i < 128; i++)
                charlist[i] = new charvalue(i, Convert.ToChar(i).ToString());
        }
    }
}
